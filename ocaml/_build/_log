### Starting build.
# Target: src/compiler.ml.depends, tags: { explain, extension:ml, file:src/compiler.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules src/compiler.ml > src/compiler.ml.depends # cached
# Target: src/lang.ml.depends, tags: { explain, extension:ml, file:src/lang.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules src/lang.ml > src/lang.ml.depends
# Target: src/lexer.mll, tags: { explain, extension:mll, file:src/lexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir }
/usr/bin/ocamllex.opt -q src/lexer.mll # cached
# Target: src/lexer.ml.depends, tags: { explain, extension:ml, file:src/lexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -modules src/lexer.ml > src/lexer.ml.depends # cached
# Target: src/parser.mly.depends, tags: { explain, extension:mly, file:src/parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' src/parser.mly > src/parser.mly.depends # cached
# Target: src/lang.cmo, tags: { byte, compile, explain, extension:cmo, extension:ml, file:src/lang.cmo, file:src/lang.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -annot -g -I src -o src/lang.cmo src/lang.ml
+ ocamlfind ocamlc -c -annot -g -I src -o src/lang.cmo src/lang.ml
File "src/lang.ml", line 96, characters 34-52:
Error: This expression has type 'a * 'b
       but an expression was expected of type value
Command exited with code 2.
# Compilation unsuccessful.
