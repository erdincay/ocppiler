
** Conflict (shift/reduce) in state 73.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

SECOND exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
(?)

** In state 73, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

SECOND exp 
       fexp 
       exp exp 
           . VAR 

** In state 73, looking ahead at VAR, reducing production
** exp -> SECOND exp 
** is permitted because of the following sub-derivation:

fexp 
exp exp // lookahead token appears because exp can begin with VAR
SECOND exp . 

** Conflict (shift/reduce) in state 72.
** Tokens involved: VAR SUB SECOND MUL LPAREN LET LEQ INT IF FUN FIX FIRST DIV BOOL ADD
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

LET VAR COLON typ EQ exp IN exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
fexp 
(?)

** In state 72, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

LET VAR COLON typ EQ exp IN exp 
                            fexp 
                            exp exp 
                                . VAR 

** In state 72, looking ahead at VAR, reducing production
** fexp -> LET VAR COLON typ EQ exp IN exp 
** is permitted because of the following sub-derivation:

exp exp // lookahead token appears because exp can begin with VAR
fexp // lookahead token is inherited
LET VAR COLON typ EQ exp IN exp . 

** Conflict (shift/reduce) in state 69.
** Tokens involved: VAR SUB SECOND MUL LPAREN LET LEQ INT IF FUN FIX FIRST DIV BOOL ADD
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

IF exp THEN exp ELSE exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
fexp 
(?)

** In state 69, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

IF exp THEN exp ELSE exp 
                     fexp 
                     exp exp 
                         . VAR 

** In state 69, looking ahead at VAR, reducing production
** fexp -> IF exp THEN exp ELSE exp 
** is permitted because of the following sub-derivation:

exp exp // lookahead token appears because exp can begin with VAR
fexp // lookahead token is inherited
IF exp THEN exp ELSE exp . 

** Conflict (shift/reduce) in state 64.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

FUN LPAREN VAR COLON typ RPAREN COLON typ RARROW exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
fexp 
(?)

** In state 64, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

FUN LPAREN VAR COLON typ RPAREN COLON typ RARROW exp 
                                                 fexp 
                                                 exp exp 
                                                     . VAR 

** In state 64, looking ahead at VAR, reducing production
** fexp -> FUN LPAREN VAR COLON typ RPAREN COLON typ RARROW exp 
** is permitted because of the following sub-derivation:

exp exp // lookahead token appears because exp can begin with VAR
fexp // lookahead token is inherited
FUN LPAREN VAR COLON typ RPAREN COLON typ RARROW exp . 

** Conflict (shift/reduce) in state 58.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

FIX VAR LPAREN VAR COLON typ RPAREN COLON typ RARROW exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
fexp 
(?)

** In state 58, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

FIX VAR LPAREN VAR COLON typ RPAREN COLON typ RARROW exp 
                                                     fexp 
                                                     exp exp 
                                                         . VAR 

** In state 58, looking ahead at VAR, reducing production
** fexp -> FIX VAR LPAREN VAR COLON typ RPAREN COLON typ RARROW exp 
** is permitted because of the following sub-derivation:

exp exp // lookahead token appears because exp can begin with VAR
fexp // lookahead token is inherited
FIX VAR LPAREN VAR COLON typ RPAREN COLON typ RARROW exp . 

** Conflict (shift/reduce) in state 57.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

exp ADD exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
(?)

** In state 57, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

exp ADD exp 
        fexp 
        exp exp 
            . VAR 

** In state 57, looking ahead at VAR, reducing production
** exp -> exp ADD exp 
** is permitted because of the following sub-derivation:

fexp 
exp exp // lookahead token appears because exp can begin with VAR
exp ADD exp . 

** Conflict (shift/reduce) in state 55.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

exp LEQ exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
(?)

** In state 55, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

exp LEQ exp 
        fexp 
        exp exp 
            . VAR 

** In state 55, looking ahead at VAR, reducing production
** exp -> exp LEQ exp 
** is permitted because of the following sub-derivation:

fexp 
exp exp // lookahead token appears because exp can begin with VAR
exp LEQ exp . 

** Conflict (shift/reduce) in state 53.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

exp DIV exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
(?)

** In state 53, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

exp DIV exp 
        fexp 
        exp exp 
            . VAR 

** In state 53, looking ahead at VAR, reducing production
** exp -> exp DIV exp 
** is permitted because of the following sub-derivation:

fexp 
exp exp // lookahead token appears because exp can begin with VAR
exp DIV exp . 

** Conflict (shift/reduce) in state 51.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

exp MUL exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
(?)

** In state 51, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

exp MUL exp 
        fexp 
        exp exp 
            . VAR 

** In state 51, looking ahead at VAR, reducing production
** exp -> exp MUL exp 
** is permitted because of the following sub-derivation:

fexp 
exp exp // lookahead token appears because exp can begin with VAR
exp MUL exp . 

** Conflict (shift/reduce) in state 49.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

exp SUB exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
(?)

** In state 49, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

exp SUB exp 
        fexp 
        exp exp 
            . VAR 

** In state 49, looking ahead at VAR, reducing production
** exp -> exp SUB exp 
** is permitted because of the following sub-derivation:

fexp 
exp exp // lookahead token appears because exp can begin with VAR
exp SUB exp . 

** Conflict (shift/reduce) in state 47.
** Tokens involved: VAR SUB SECOND MUL LPAREN LET LEQ INT IF FUN FIX FIRST DIV BOOL ADD
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

exp exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
fexp 
(?)

** In state 47, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

exp exp 
    fexp 
    exp exp 
        . VAR 

** In state 47, looking ahead at VAR, reducing production
** fexp -> exp exp 
** is permitted because of the following sub-derivation:

exp exp // lookahead token appears because exp can begin with VAR
fexp // lookahead token is inherited
exp exp . 

** Conflict (shift/reduce) in state 46.
** Tokens involved: VAR LPAREN LET INT IF FUN FIX BOOL
** The following explanations concentrate on token VAR.
** This state is reached from prog after reading:

FIRST exp 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
exp EOF 
(?)

** In state 46, looking ahead at VAR, shifting is permitted
** because of the following sub-derivation:

FIRST exp 
      fexp 
      exp exp 
          . VAR 

** In state 46, looking ahead at VAR, reducing production
** exp -> FIRST exp 
** is permitted because of the following sub-derivation:

fexp 
exp exp // lookahead token appears because exp can begin with VAR
FIRST exp . 
